
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Base dark theme colors from the spec */
    --background-start-rgb: 12, 12, 26; /* #0c0c1a */
    --background-end-rgb: 0, 0, 0;     /* #000000 */
    --background-rgb: 12, 12, 26; /* Default to start of gradient */

    --foreground-rgb: 220, 220, 240; /* Light grey/off-white for text */
    
    --primary-rgb: 0, 255, 255;      /* Cyan #0ff */
    --primary-foreground-rgb: 0, 0, 0; /* Black text on primary */

    --secondary-rgb: 50, 50, 70; /* Darker subtle secondary */
    --secondary-foreground-rgb: 200, 200, 220;

    --accent-rgb: 255, 0, 255;       /* Magenta #f0f */
    --accent-foreground-rgb: 255, 255, 255; /* White text on accent */

    /* Glassmorphic section styles (converted to RGB for consistency) */
    --card-background-rgb: 255, 255, 255; /* Base for rgba(255,255,255,0.02) */
    --card-background-alpha: 0.02;
    --card-border-rgb: 255, 255, 255;    /* Base for rgba(255,255,255,0.05) */
    --card-border-alpha: 0.05;
    --card-foreground-rgb: var(--foreground-rgb);

    --popover-background-rgb: 30, 30, 50; /* Darker popover */
    --popover-foreground-rgb: var(--foreground-rgb);

    --muted-rgb: 40, 40, 60;
    --muted-foreground-rgb: 180, 180, 200;

    --destructive-rgb: 255, 50, 50; /* A brighter red for destructive */
    --destructive-foreground-rgb: 255, 255, 255;

    --border-rgb: var(--card-border-rgb); /* Default border for inputs etc. */
    --border-alpha: 0.1; /* Slightly more opaque than card border */
    --input-background-rgb: 20, 20, 35;
    --input-border-rgb: var(--primary-rgb); /* Cyan border for inputs on focus */
    
    --ring-rgb: var(--primary-rgb); /* Cyan for focus rings */

    --radius: 0.5rem; /* Keep existing radius for consistency, spec says 16px for sections, 10px for buttons */

    /* Chart colors - can be adapted if charts are used */
    --chart-1-rgb: var(--primary-rgb);
    --chart-2-rgb: var(--accent-rgb);
    --chart-3-rgb: 0, 200, 200;
    --chart-4-rgb: 200, 0, 200;
    --chart-5-rgb: 150, 150, 255;
  }

  /* Generate HSL versions for ShadCN components compatibility */
  :root {
    --background: hsl(from rgb(var(--background-rgb)) h s l);
    --foreground: hsl(from rgb(var(--foreground-rgb)) h s l);
    --primary: hsl(from rgb(var(--primary-rgb)) h s l);
    --primary-foreground: hsl(from rgb(var(--primary-foreground-rgb)) h s l);
    --secondary: hsl(from rgb(var(--secondary-rgb)) h s l);
    --secondary-foreground: hsl(from rgb(var(--secondary-foreground-rgb)) h s l);
    --accent: hsl(from rgb(var(--accent-rgb)) h s l);
    --accent-foreground: hsl(from rgb(var(--accent-foreground-rgb)) h s l);
    
    --card: hsla(from rgb(var(--card-background-rgb)) h s l / var(--card-background-alpha));
    --card-foreground: hsl(from rgb(var(--card-foreground-rgb)) h s l);
    
    --popover: hsl(from rgb(var(--popover-background-rgb)) h s l);
    --popover-foreground: hsl(from rgb(var(--popover-foreground-rgb)) h s l);
    
    --muted: hsl(from rgb(var(--muted-rgb)) h s l);
    --muted-foreground: hsl(from rgb(var(--muted-foreground-rgb)) h s l);
    
    --destructive: hsl(from rgb(var(--destructive-rgb)) h s l);
    --destructive-foreground: hsl(from rgb(var(--destructive-foreground-rgb)) h s l);
    
    --border: hsla(from rgb(var(--border-rgb)) h s l / var(--border-alpha));
    --input: hsl(from rgb(var(--input-background-rgb)) h s l); /* Input specific bg */
    /* Input border will be handled by Tailwind focus variants or component styles */
    --ring: hsl(from rgb(var(--ring-rgb)) h s l);

    --chart-1: hsl(from rgb(var(--chart-1-rgb)) h s l);
    --chart-2: hsl(from rgb(var(--chart-2-rgb)) h s l);
    --chart-3: hsl(from rgb(var(--chart-3-rgb)) h s l);
    --chart-4: hsl(from rgb(var(--chart-4-rgb)) h s l);
    --chart-5: hsl(from rgb(var(--chart-5-rgb)) h s l);
  }

  /* Force dark theme as per spec - remove .dark class dependency for these vars */
  /* body {
    --background: hsl(from rgb(var(--background-rgb)) h s l); 
    --foreground: hsl(from rgb(var(--foreground-rgb)) h s l);
  } */
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-gradient-to-b from-[rgb(var(--background-start-rgb))] to-[rgb(var(--background-end-rgb))];
    color: hsl(var(--foreground)); /* Explicitly set text color */
    font-family: var(--font-inter), sans-serif;
    overflow-x: hidden;
    min-height: 100vh;
  }
  #galaxy-background-canvas {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1; /* Ensure it's behind all content */
  }

  h1 { @apply font-orbitron text-5xl sm:text-6xl md:text-7xl font-bold; } 
  h2 { @apply font-space-mono text-4xl sm:text-5xl font-bold; } 
  h3 { @apply font-inter text-2xl sm:text-3xl font-semibold; } 
  p, span, div, li, label, button, input, select, textarea { @apply font-inter text-lg; } 
  .font-cli { @apply font-space-mono text-base; }
}

/* Section Container Styles */
@layer components {
  .glass-section {
    @apply rounded-2xl border border-[hsla(var(--card-border-rgb),var(--card-border-alpha))] p-8 md:p-12 lg:p-16; 
    backdrop-filter: blur(12px);
    background: hsla(var(--card-background-rgb), var(--card-background-alpha));
    animation: pulse-border 6s linear infinite;
  }
}

@keyframes pulse-border {
  0%, 100% {
    box-shadow: 0 0 0px hsla(var(--primary-rgb), 0);
  }
  50% {
    box-shadow: 0 0 12px 2px hsla(var(--primary-rgb), 0.15), 0 0 6px 1px hsla(var(--primary-rgb), 0.1);
  }
}

@keyframes glitch-flicker {
  0%, 100% { opacity: 1; transform: skewX(0deg); }
  25% { opacity: 0.8; transform: skewX(-0.5deg) translateY(-1px); }
  50% { opacity: 1; transform: skewX(0.5deg) translateY(1px); }
  75% { opacity: 0.9; transform: skewX(0.25deg); }
}
.animate-glitch-flicker {
  animation: glitch-flicker 1.5s infinite alternate;
}


/* Simplified Tab Styling */
@layer utilities {
  .param-tab-trigger {
    @apply justify-start text-left font-medium transition-colors w-full;
    @apply px-3 py-2.5 text-base rounded-md; 
  }

  .param-tab-trigger[data-state="active"] {
    @apply bg-[hsla(var(--primary-rgb),0.1)] text-primary; 
    border-color: hsl(var(--primary));
  }
  
  .param-tab-trigger:not([data-state="active"]):hover {
     @apply bg-[hsla(var(--muted-rgb),0.5)] text-foreground;
  }

  .gradient-text-cyan-magenta {
    @apply bg-clip-text text-transparent bg-gradient-to-r from-primary to-accent;
  }

  .terminal-cursor::after {
    content: "_";
    @apply opacity-100;
    animation: blink 1s step-end infinite;
  }

  @keyframes blink {
    from, to { @apply opacity-100; }
    50% { @apply opacity-0; }
  }

  /* CTA Button Styles */
  .btn-primary-cta {
    @apply w-full sm:w-auto font-space-mono uppercase text-sm sm:text-base font-bold text-[rgb(var(--primary-foreground-rgb))] rounded-lg px-8 py-4 transition-all duration-300 ease-in-out;
    background: linear-gradient(90deg, hsl(var(--primary)), hsl(var(--accent)));
  }
  .btn-primary-cta:hover {
    transform: scale(1.03);
    box-shadow: 0 0 12px 2px hsla(var(--primary-rgb), 0.5), 0 0 24px 4px hsla(var(--accent-rgb), 0.3);
  }

  .btn-terminal-cta {
    @apply font-cli text-base text-primary px-4 py-2 border border-primary rounded-md relative overflow-hidden;
    background: transparent;
  }
  .btn-terminal-cta::after { 
    content: "_";
    @apply absolute opacity-0 transition-opacity duration-100;
    bottom: 6px; 
    right: 8px;
  }
  .btn-terminal-cta:hover::after {
    animation: blink 1s step-end infinite;
    @apply opacity-100;
  }

  .btn-minimal-cta {
    @apply font-inter text-base text-primary px-6 py-3 border border-primary rounded-lg relative overflow-hidden transition-all duration-300;
    background: transparent;
  }
  .btn-minimal-cta:hover {
    border-color: transparent;
    background: linear-gradient(90deg, hsl(var(--primary)), hsl(var(--accent)));
    background-size: 200% 200%;
    animation: gradient-border-pulse 3s linear infinite, text-to-white 0.3s forwards;
    color: hsl(var(--primary-foreground));
  }

  @keyframes gradient-border-pulse {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }
  @keyframes text-to-white {
    to { color: hsl(var(--primary-foreground)); }
  }
}
